// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model regions {
  region_id Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Bitta region bir nechta servislarga tegishli
  services  services[]  @relation("ServiceRegions")
  // Bitta region bir nechta adressga tegishli
  addresses addresses[]
}

model categories {
  category_id Int      @id @default(autoincrement())
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Bitta kategoriya bir nechta servislarga tegishli
  services services[]
}

model services {
  service_id  Int    @id @default(autoincrement())
  name        String @unique
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Many-to-many (Bitta servis bir nechta regionga tegishli)
  regions regions[] @relation("ServiceRegions")

  // One-to-many (Bitta servis faqat bitta kategoriya bilan bog'lanadi)
  category    categories @relation(fields: [category_id], references: [category_id])
  category_id Int

  // One-to-many (Bitta servis bir nechta adresga tegishli)
  addresses addresses[]

  // One-to-many (Bitta servis faqat bitta contactga tegishli)
  contacts contacts[]
}

model addresses {
  address_id  Int     @id @default(autoincrement())
  street      String
  city        String
  state       String
  postal_code String
  latitude    Decimal @db.Decimal(10, 8)
  longitude   Decimal @db.Decimal(11, 8)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // One-to-many (Bitta adres faqat bitta servicega tegishli)
  service_id Int
  service    services @relation(fields: [service_id], references: [service_id])

  // One-to-many (Bitta adres bitta regionga tegishli)
  region_id Int
  region    regions    @relation(fields: [region_id], references: [region_id])
  contacts  contacts[]
}

model contacts {
  contact_id Int     @id @default(autoincrement())
  type       String
  value      String
  is_primary Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // One-to-many (Bitta contact faqat bitta servicega tegishli)
  service_id Int
  service    services @relation(fields: [service_id], references: [service_id])

  // One-to-many (Bitta contact faqat bitta addressga tegishli)
  address_id Int
  address    addresses @relation(fields: [address_id], references: [address_id])
}
